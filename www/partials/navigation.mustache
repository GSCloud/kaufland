<!-- top navigation | all sizes -->
<nav id="top_nav" class="top middle hidden">
  <a class="nav_app">
    <span class="badge circle left red hidden white-text">!</span>
    <img id="logo" class="circle small-margin"
      src="{{ cdn }}/img/favicon-256.png"/>
  </a>
  <a class="nav_config">
    <i tabindex="-1" class="large" data-color="grey-text">build</i>
    <div>
      <span tabindex="-1">{{ l.nav_config }}</span>
    </div>
  </a>
  <a class="nav_user">
    <i tabindex="-1" class="large" data-color="grey-text">face</i>
    <div>
      <span tabindex="-1">{{ l.nav_user }}</span>
    </div>
  </a>
</nav>

<!-- bottom navigation | medium large -->
<nav class="bottom m l middle hidden">
  <a class="nav_info">
    <i tabindex="-1" class="large" data-color="blue-text">info</i>
    <div>
      <span tabindex="-1">{{ l.nav_info }}</span>
    </div>
  </a>
  <a class="nav_game">
    <i tabindex="-1" class="large" data-color="pink-text">sports_esports</i>
    <div>
      <span tabindex="-1">{{ l.nav_game }}</span>
    </div>
  </a>
  <a class="nav_message">
    <i tabindex="-1" class="large" data-color="green-text">message</i>
    <div>
      <span tabindex="-1">{{ l.nav_message }}</span>
    </div>
  </a>
  <a class="nav_price">
    <i tabindex="-1" class="large" data-color="red-text">paid</i>
    <div>
      <span tabindex="-1">{{ l.nav_price }}</span>
    </div>
  </a>
  <a class="nav_warehouse">
    <i tabindex="-1" class="large" data-color="orange-text">warehouse</i>
    <div>
      <span tabindex="-1">{{ l.nav_warehouse }}</span>
    </div>
  </a>
</nav>

<!-- bottom navigation | small -->
<nav class="bottom s middle hidden">
  <a class="nav_info">
    <i tabindex="-1" class="large" data-color="blue-text">info</i>
  </a>
  <a class="nav_game">
    <i tabindex="-1" class="large" data-color="pink-text">sports_esports</i>
  </a>
  <a class="nav_message">
    <i tabindex="-1" class="large" data-color="green-text">message</i>
  </a>
  <a class="nav_price">
    <i tabindex="-1" class="large" data-color="red-text">paid</i>
  </a>
  <a class="nav_warehouse">
    <i tabindex="-1" class="large" data-color="orange-text">warehouse</i>
  </a>
</nav>

<script>
  (function (w, $, undefined) {
    "use strict";

    // show error page if there is no localStorage
    if (!localStorage) {
      window.location.href = '/err/500';
    }

    // progress bar handler
    w.onscroll = function() {
      var scroll = document.body.scrollTop || document.documentElement.scrollTop;
      var height = document.documentElement.scrollHeight - document.documentElement.clientHeight;
      var scrolled = (scroll / height) * 100;
      if (document.getElementById("progressbar")) document.getElementById("progressbar").style.width = scrolled + "%";
      if (localStorage && localStorage['navigation']) {
        localStorage['scroll_' + localStorage['navigation']] = parseInt(scroll);
      }
      // show/hide top navigation on touch enabled devices
      if (GSC.touch) {
        if (scroll > 300) {
          $("#top_nav").hide(250);
        } else {
          $("#top_nav").show(100);
        }
      }
    };


    // *** DELAYED FUNCTIONS ***
    GSC._fn.push(function () {

      // array of modal popups
      GSC.modals = [];

      // set UI mode
      function setUiMode() {
        if (parseBool(localStorage["ui"])) {
          ui("mode", "light");
          $(".white-text").removeClass('white-text').addClass('black-text');
        } else {
          ui("mode", "dark");
          $(".black-text").removeClass('black-text').addClass('white-text');
        }
      }

      // set navigation by element
      function setNavigation(el) {
        if (!el) return false;
        if (!$('.' + el)) return false;
        localStorage['navigation'] = el;

        // remove modals
        if (GSC.modals.length) {
          GSC.modals.forEach(el => {
            $('#' + el).removeClass('active');
          });
        }

        // compute vertical offset
        var offset = localStorage['scroll_' + el];
        if (isNaN(offset)) offset = 0;
        var last = localStorage['scroll_last_' + el];
        if (isNaN(last)) last = 0;
        if (localStorage['navigation_last'] == el) {
          if (offset == last) offset = 0;
        }
        localStorage['scroll_last_' + el] = offset;
        localStorage['navigation_last'] = el;
        window.scrollTo({
          top: offset,
          left: 0,
          behavior: 'smooth'
        });

        // set view design
        $('nav i, nav div').removeClass();
        $('.section').addClass('hidden');
        $('.' + el + '>i').addClass($('.' + el + '>i').data('color')).addClass('large');
        $('.' + el + '>div').addClass($('.' + el + '>i').data('color')).addClass('bold');
      }


      // NAVIGATION CLICK HANDLERS

      // K - logo
      $('.nav_app').click(function () {
        $('#appinfo_modal').toggleClass('active');
        GSC.modals.push('appinfo_modal');
      });

      // update
      $('.nav_update').click(function () {
        window.location.replace("?nonce={{ nonce }}");
      });
      
      // config
      $('.nav_config').click(function () {
        setNavigation(this.className);
        $('#config').removeClass('hidden');
      });
      
      // user
      $('.nav_user').click(function () {
        setNavigation(this.className);
        $('#user').removeClass('hidden');
      });

      // info
      $('.nav_info').click(function () {
        setNavigation(this.className);
        $('#info').removeClass('hidden');
      });
      
      // game
      $('.nav_game').click(function () {
        setNavigation(this.className);
        $('#game').removeClass('hidden');
      });
      
      // message
      $('.nav_message').click(function () {
        setNavigation(this.className);
        $('#message').removeClass('hidden');
      });
      
      // price
      $('.nav_price').click(function () {
        setNavigation(this.className);
        $('#price').removeClass('hidden');
      });
      
      // warehouse
      $('.nav_warehouse').click(function () {
        setNavigation(this.className);
        $('#warehouse').removeClass('hidden');
      });

      // settings: UI
      $('.ui').click(function () {
        localStorage["ui"] = $(this).is(":checked");
        setUiMode();
      });

      // settings: VIBRATE
      $('.vibrate').click(function () {
        localStorage["vibrate"] = $(this).is(":checked");
        GSC.vibrate = parseBool(localStorage["vibrate"]);
        if (GSC.vibrate) {
          window.navigator.vibrate(100);
        }
        setTestVibrateButton();
      });

      // settings: SFX
      $('.sfx').click(function () {
        localStorage["sfx"] = $(this).is(":checked");
        GSC.sfx = parseBool(localStorage["sfx"]);
        setTestSfxButton();
      });

      // settings: MUSIC
      $('.music').click(function () {
        localStorage["music"] = $(this).is(":checked");
        GSC.music = parseBool(localStorage["music"]);
        setTestMusicButton();
      });

      // test: vibrate
      $('.nav_test_vib').click(function () {
        if (GSC.vibrate) {
          console.log('vibrate');
          window.navigator.vibrate([100,50,100,50,100]);
        }
      });

      // test: sfx
      var source;
      var sfxbuffer = null;
      $('.nav_test_sfx').click(function () {
        if (GSC.sfx) {
          console.log('sfx');
          if (GSC.audioctx && sfxbuffer) {
            source = GSC.audioctx.createBufferSource();
            source.buffer = sfxbuffer;
            source.connect(GSC.audioctx.destination);
            source.start();   
            return;
          }
          // XHR load laser sound from network
          var request = new XMLHttpRequest();
          request.open('GET', '/sfx/laser.mp3', true);
          GSC.D('GET /sfx/laser.mp3');
          request.responseType = 'arraybuffer';
          request.onload = function() {
            GSC.audioctx && GSC.audioctx.decodeAudioData(request.response, function(buf) {
                source = GSC.audioctx.createBufferSource();
                sfxbuffer = buf;
                source.buffer = buf;
                source.connect(GSC.audioctx.destination);
                source.start();
                GSC.ComOff();
            });
          }
          GSC.ComOn();
          request.send();
        }
      });

      // test: music
      $('.nav_test_music').click(function () {
        if (GSC.music) {
          console.log('music');
        }
      });


      // OTHER HANDLERS AND RUNTIMES

      // set navigation to the saved state
      if (localStorage['navigation']) {
        $('.' + localStorage['navigation']).click();
      } else {
        $('.nav_info').click();
      }
      
      // click text to remove modals
      $('.section,main').click(function () {
        if (!GSC.audioctx) {
          try {
            GSC.audioctx = new AudioContext();
            console.log('AudioContext created:');
            console.log(GSC.audioctx);
          }
          catch(e) {
            console.log("AudioContext error:");
            console.log(e);
          }
        }
        if (GSC.modals.length) {
          GSC.modals.forEach(el => {
            $('#' + el).removeClass('active');
          });
        }
      });

      // set switches
      $('.music').prop('checked', localStorage["music"] == "true");
      $('.sfx').prop('checked', localStorage["sfx"] == "true");
      $('.ui').prop('checked', localStorage["ui"] == "true");
      $('.vibrate').prop('checked', localStorage["vibrate"] == "true");

      // set GSC properties
      GSC.music = parseBool(localStorage["music"]);
      GSC.sfx = parseBool(localStorage["sfx"]);
      GSC.vibrate = parseBool(localStorage["vibrate"]);

      // test button #1
      function setTestVibrateButton() {
        if (GSC.vibrate) {
          $('.nav_test_vib').removeClass('grey').addClass('blue');
        } else {
          $('.nav_test_vib').removeClass('blue').addClass('grey');
        }
      }

      // test button #2
      function setTestSfxButton() {
        if (GSC.sfx) {
          $('.nav_test_sfx').removeClass('grey').addClass('blue');
        } else {
          $('.nav_test_sfx').removeClass('blue').addClass('grey');
        }
      }
      // test button #3
      function setTestMusicButton() {
        if (GSC.music) {
          $('.nav_test_music').removeClass('grey').addClass('blue');
        } else {
          $('.nav_test_music').removeClass('blue').addClass('grey');
        }
      }

      // UI quirks
      setUiMode();
      setTestVibrateButton();
      setTestSfxButton();
      setTestMusicButton();
      $('#appinfo_modal').removeClass('hidden');
      $('#offline').removeClass('hidden');
      $('nav').hide().removeClass('hidden').hide().show(300);
      $('body').hide().removeClass('hidden').hide().show(500);

      // show version modal box
      //$('.nav_app').click();
    });
  })(window, $);

</script>
